/******************************************************************************
    Copyright (c) 1996-2001 Synopsys, Inc.    ALL RIGHTS RESERVED

  The contents of this file are subject to the restrictions and limitations
  set forth in the SystemC Open Community License Software Download and
  Use License Version 1.2 (the "License"); you may not use this file except
  in compliance with such restrictions and limitations. You may obtain
  instructions on how to receive a copy of the License at
  http://www.systemc.org/. Software distributed by Original Contributor
  under the License is distributed on an "AS IS" basis, WITHOUT WARRANTY OF
  ANY KIND, either express or implied. See the License for the specific
  language governing rights and limitations under the License.

******************************************************************************/

/******************************************************************************

    sc_bool_vector_defs.h_ - Definitions of inline functions, &c., 
                          for bool_vector.

    Original Author: Stan Y. Liao. Synopsys, Inc. (stanliao@synopsys.com)

******************************************************************************/

/******************************************************************************

    MODIFICATION LOG - modifiers, enter your name, affliation and
    changes you are making here:

    Modifier Name & Affiliation:
    Description of Modification:
    

******************************************************************************/

#ifdef SC_BOOL_VECTOR_H
#ifndef SC_BOOL_VECTOR_DEFS_H
#define SC_BOOL_VECTOR_DEFS_H

inline bool sc_bool_vector::operator==( const sc_bool_vector& rhs ) const
{
    return sc_array<bool>::operator==(rhs);
}

inline bool sc_bool_vector::operator!=( const sc_bool_vector& rhs ) const
{
    return sc_array<bool>::operator!=(rhs);
}

inline bool
sc_bool_vector::operator!=( const sc_logic_vector& rhs ) const
{
    return !(sc_bool_vector::operator==(rhs));
}

inline bool
sc_bool_vector::operator!=( const char* rhs ) const
{
    return !(sc_bool_vector::operator==(rhs));
}


inline const sc_bool_vector_andop1 operator&( const sc_bool_vector& a, const sc_bool_vector& b )
{
    return sc_bool_vector_andop1(&a, &b);
}

inline const sc_bool_vector_andop2 operator&( const sc_bool_vector& a, const char* b )
{
    return sc_bool_vector_andop2(&a, b);
}

inline const sc_bool_vector_andop2 operator&( const char* a, const sc_bool_vector& b )
{
    return sc_bool_vector_andop2(&b, a);
}

inline const sc_bool_vector_orop1 operator|( const sc_bool_vector& a, const sc_bool_vector& b )
{
    return sc_bool_vector_orop1(&a, &b);
}

inline const sc_bool_vector_orop2 operator|( const sc_bool_vector& a, const char* b )
{
    return sc_bool_vector_orop2(&a, b);
}
inline const sc_bool_vector_orop2 operator|( const char* a, const sc_bool_vector& b )
{
    return sc_bool_vector_orop2(&b, a);
}

inline const sc_bool_vector_xorop1 operator^( const sc_bool_vector& a, const sc_bool_vector& b )
{
    return sc_bool_vector_xorop1( &a, &b );
}

inline const sc_bool_vector_xorop2 operator^( const sc_bool_vector& a, const char* b )
{
    return sc_bool_vector_xorop2( &a, b );
}

inline const sc_bool_vector_xorop2 operator^( const char* a, const sc_bool_vector& b )
{
    return sc_bool_vector_xorop2( &b, a );
}

inline sc_bool_vector operator~( const sc_bool_vector& a )
{
    return sc_bool_vector_notop( &a );
}

#define DEFINE_REDUCE(red) inline bool red( const sc_bool_vector& a ) { return a.red(); }
DEFINE_REDUCE(and_reduce);
DEFINE_REDUCE(nand_reduce);
DEFINE_REDUCE(or_reduce);
DEFINE_REDUCE(nor_reduce);
DEFINE_REDUCE(xor_reduce);
DEFINE_REDUCE(xnor_reduce);
#undef DEFINE_REDUCE

#endif
#endif
